<?xml version="1.0" encoding="utf-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <property name="now" value="now()" dbms="mysql,h2"/>
    <property name="now" value="current_timestamp" dbms="postgresql"/>
    <property name="now" value="sysdate" dbms="oracle"/>

    <property name="autoIncrement" value="true" dbms="mysql"/>
    <property name="autoIncrement" value="false" dbms="oracle"/>

    <!--
        Added the entity Book.
    -->
    <changeSet id="20150514194600" author="service">
        <createTable tableName="BOOK">
            <column name="id" type="bigint" autoIncrement="${autoIncrement}">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="title" type="varchar(255)"/>
            <column name="price" type="decimal(10,2)"/>
            <column name="author_id" type="bigint"/>
        </createTable>
        
        <addForeignKeyConstraint baseColumnNames="author_id"
                                 baseTableName="BOOK"
                                 constraintName="fk_book_author_id"
                                 referencedColumnNames="id"
                                 referencedTableName="AUTHOR"/>

    </changeSet>

    <changeSet id="20150514194601" author="service" dbms="oracle">
        <createSequence sequenceName="SQ_BOOK" startValue="1000" incrementBy="1"/>

        <createProcedure>
            CREATE OR REPLACE TRIGGER tg_book_next_id
            BEFORE INSERT
            ON book
            FOR EACH ROW
            DECLARE
                v_id book.id%TYPE;
            BEGIN
            -- Select a new value from the sequence into a local variable.
            -- This step is optional. You can directly select into :new.qname_id
                SELECT sq_book.nextval INTO v_id FROM DUAL;
                :new.id := v_id;
            END tg_book_next_id;
        </createProcedure>
        <rollback>
            DROP TRIGGER tg_book_next_id;
            DROP SEQUENCE sq_book;
        </rollback>
    </changeSet>
</databaseChangeLog>
